name: Build and Release

on:
    push:
        tags:
            - "v*"

jobs:
    # This builds and releases for Windows, MacOS, and Linux
    usu-build-release:
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                include:
                    - os: ubuntu-latest
                      artifact_name: sotto
                      asset_name: sotto-linux-amd64
                    - os: macos-latest
                      artifact_name: sotto
                      asset_name: sotto-macos-amd64
                    - os: windows-latest
                      artifact_name: sotto.exe
                      asset_name: sotto-windows-amd64
        steps:
            - uses: actions/checkout@v2

            # Cache Cargo binaries
            - uses: actions/cache@v3
              id: cache
              with:
                path: |
                  ~/.cargo/bin/
                # The cache should be OS-specific
                key: ${{ runner.os }}-cargo-bins
            # Only install the binaries if the cache doesn't have them
            - name: Install Dependencies
              if: steps.cache.outputs.cache-hit != 'true'
              run: |
                cargo install bonnie tauri-cli
                cargo install perseus-cli
            - name: Install NPM dependencies
              run: |
                npm install -g tailwindcss
                npm install
            - name: Install dependencies (Ubuntu only)
              if: matrix.os == 'ubuntu-latest'
              run: |
                sudo apt-get update
                sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf libasound2-dev alsa-base alsa-utils

            - name: Build
              run: bonnie build

            # Linux and MacOS get a proper packaging system, Windows is not yet supported properly (they just get a `.exe` file)
            - name: Package everything (Linux and MacOS)
              if: matrix.os != 'windows-latest'
              run: |
                # Collate all the scripts we need
                mkdir sotto-release
                cp scripts/run-sotto.sh sotto-release/sotto
                cp scripts/unix-install.sh sotto-release/install.sh
                cp scripts/unix-desktop.desktop sotto-release/unix-desktop.desktop
                # And grab the actual release artifact
                mv src-tauri/target/release/${{ matrix.artifact_name }} sotto-release/sotto-app
                # Then turn it all into an archive
                tar -czf ${{ matrix.artifact_name }} sotto-release/
            # TODO
            - name: Package everything (Windows)
              if: matrix.os == 'windows-latest'
              run: |
                # This is for compatibility with the other OSes right now, we don't have a Windows packaging system
                mv src-tauri/target/release/${{ matrix.artifact_name }} ${{ matrix.artifact_name }}
            - name: Release binary
              uses: svenstaro/upload-release-action@v2
              with:
                  repo_token: ${{ secrets.GITHUB_TOKEN }}
                  # This is the archive we created
                  file: ${{ matrix.artifact_name }}
                  asset_name: ${{ matrix.asset_name }}
                  tag: ${{ github.ref }}
                  body: "The below binaries/executables are for the Sotto app. See [CHANGELOG.md](./CHANGELOG.md) for details of the changes in this version."
